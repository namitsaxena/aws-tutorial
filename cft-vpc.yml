AWSTemplateFormatVersion: 2010-09-09
Description: 'Network setup'
############################################################################################################
# usage:-
# aws cloudformation list-stacks --stack-status-filter CREATE_COMPLETE ROLLBACK_COMPLETE --query StackSummaries[*].StackName 
# aws cloudformation create-stack --stack-name ns-network-stack --template-body file://cft-vpc.yml 
# aws cloudformation wait stack-create-complete --stack-name ns-network-stack
# aws cloudformation delete-stack  --stack-name ns-network-stack
# aws cloudformation wait stack-delete-complete --stack-name ns-network-stack
############################################################################################################

Resources:
  ########################
  # VPC
  ########################
  nsVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.1.0.0/20
      EnableDnsHostnames: 'false'
      EnableDnsSupport: 'false'
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: ns-vpc-cft  

  IPv6CidrBlock:
    Type: AWS::EC2::VPCCidrBlock
    Properties:
      VpcId: !Ref nsVPC
      AmazonProvidedIpv6CidrBlock: true

  ########################
  # Internet Gateway
  ########################
  nsInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: ns-cft-igw

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: nsVPC
      InternetGatewayId:
         Ref: nsInternetGateway        

  ########################
  # Network ACLs       
  ########################
  # Public NACL not needed since 
  # it's same as default i.e. allow all
  privateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
       VpcId:
         Ref: nsVPC
       Tags:
       - Key: Name
         Value: ns-cft-private

  # allow inbound only from within the network~
  # default - deny all is already in effect
  # privateNetworkAclEntryInbound:
  #   Type: AWS::EC2::NetworkAclEntry
  #   Properties:
  #      NetworkAclId:
  #         Ref: privateNetworkAcl
  #      RuleNumber: '100'
  #      Protocol: "-1"
  #      RuleAction: allow
  #      Egress: 'false'
  #      CidrBlock: 10.1.0.0/20

  # allow all outbound
  privateNetworkAclEntryOutbound:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
          Ref: privateNetworkAcl
       RuleNumber: '110'
       Protocol: "-1"
       RuleAction: allow
       Egress: 'true'
       CidrBlock: 0.0.0.0/0

  ########################
  # Routing Tables      
  ########################
  routeTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: nsVPC
      Tags:
      - Key: Name
        Value: ns-cft-public        

  routeTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: nsVPC
      Tags:
      - Key: Name
        Value: ns-cft-private       

  ########################
  # Subnets       
  ########################
  Subnet1a:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      #AssignIpv6AddressOnCreation: 'false'
      AvailabilityZone: "us-east-1a"
      CidrBlock: 10.1.1.0/24
      #Ipv6CidrBlock: !Select [1, !Cidr [!Select [0, !GetAtt 'nsVPC.Ipv6CidrBlocks'], 256, 64]]
      #MapPublicIpOnLaunch: 'false'
      Tags:
        - Key: Name
          Value: ns-1a
  Subnet1b:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      AvailabilityZone: "us-east-1b"
      CidrBlock: 10.1.2.0/24
      Tags:
        - Key: Name
          Value: ns-1b
  Subnet1c:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      AvailabilityZone: "us-east-1c"
      CidrBlock: 10.1.3.0/24
      Tags:
        - Key: Name
          Value: ns-1c
  Subnet1d:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      AvailabilityZone: "us-east-1d"
      CidrBlock: 10.1.4.0/24
      Tags:
        - Key: Name
          Value: ns-1d
  Subnet1e:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      AvailabilityZone: "us-east-1e"
      CidrBlock: 10.1.5.0/24
      Tags:
        - Key: Name
          Value: ns-1e
  Subnet1f:    
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId:
        Ref: nsVPC
      AvailabilityZone: "us-east-1f"
      CidrBlock: 10.1.6.0/24
      Tags:
        - Key: Name
          Value: ns-1f
